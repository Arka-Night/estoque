{"version":3,"sources":["services/api.js","pages/Login/index.js","services/socket.js","pages/AdmInterface/index.js","pages/UserInterface/index.js","pages/AddItens/index.js","pages/Requests/index.js","pages/EntriesAndExits/index.js","pages/RegisterEAE/index.js","routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","Login","useState","name","setName","password","setPassword","clasName","setClasName","classPassword","setClassPassword","history","useHistory","accountId","localStorage","getItem","e","a","preventDefault","post","response","data","accountType","setItem","push","error","setTimeout","useEffect","logWithID","id","type","className","onSubmit","placeholder","value","onChange","target","client","io","AdmInterface","stock","setStock","atualization","setAtualization","active","setActive","getStock","get","console","log","auth","getName","socketClient","atualizateItemName","item","mode","event","changeType","change","itemName","emit","key","currentTarget","blur","atualizateItemQuant","itemQuant","deleteItem","idx","delete","splice","renderItem","setItemName","onBlur","onKeyPress","String","length","setItemQuant","onClick","size","color","on","requests","map","to","UserInterface","setRequests","RequestItemAction","requestQuant","RequestDelete","re","exists","forEach","iten","requestItem","requesds","count","renderRequests","AddItens","quant","setQuant","err","Requests","requestComplete","changes","itemThatChange","alterator","state","requestDelete","EntriesAndExits","eAE","setEAE","dates","setDates","entries","setEntries","exits","setExits","EAEVisualizable","setEAEV","optionValue","setOptionValue","optionVisible","setOptionVisible","getEAE","last_date","date","eAEi","entries_and_exits","reverse","datesi","EAEItem","dateItem","datItem","renderEAEV","parseInt","time","VEAE","defineVisualizableEAE","renderDates","RegisterEAE","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1223902a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: `http://10.5.50.78:80/`,\r\n});\r\n\r\nexport default api;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './logStyles.css';\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function Login() {\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [clasName, setClasName] = useState('InputBox');\r\n    const [classPassword, setClassPassword] = useState('InputBox');\r\n    const history = useHistory();\r\n    const accountId = localStorage.getItem('accountId');\r\n\r\n    useEffect(() => {\r\n        logWithID();\r\n\r\n    });\r\n\r\n    async function logar(e) {\r\n        e.preventDefault();\r\n\r\n        if (name && password) {\r\n            try {\r\n                const response = await api.post('/enterProfile', {name, password});\r\n\r\n                setClasName('InputBox');\r\n                setClassPassword('InputBox');\r\n\r\n                if(response.data.accountType === \"adm\") {\r\n                    localStorage.setItem(\"accountId\", response.data.accountId);\r\n                    history.push('/adm');\r\n\r\n                } else {\r\n                    localStorage.setItem(\"accountId\", response.data.accountId);\r\n                    history.push('/user');\r\n\r\n                }\r\n\r\n            } catch(err) {\r\n                if(err.response.data.error === \"doesn't exist any user with this name\") {\r\n                    setClasName('ErrorBox');\r\n                    setClassPassword('InputBox');\r\n                    setTimeout(() => {\r\n                        setClasName('InputBox');\r\n        \r\n                    }, 5000);\r\n\r\n                } else {\r\n                    setClassPassword('ErrorBox');\r\n                    setClasName('InputBox');\r\n                    setTimeout(() => {\r\n                        setClassPassword('InputBox');\r\n        \r\n                    }, 5000);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }else {\r\n            setClasName('ErrorBox');\r\n            setClassPassword('ErrorBox');\r\n            setTimeout(() => {\r\n                setClasName('InputBox');\r\n                setClassPassword('InputBox');\r\n\r\n            }, 5000);\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const logWithID = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/adm');\r\n\r\n            } else {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"LogPage\">\r\n            <h1 className=\"Title\">Estoque Tecnet</h1>\r\n            <form className=\"Form\" onSubmit={logar}>\r\n              <h1 className=\"Header\">Login</h1>\r\n              <input className={clasName} placeholder=\"Usuário\" value={name} onChange={e => {setName(e.target.value)}} />  \r\n              <input className={classPassword} type=\"password\" placeholder=\"Senha\" value={password} onChange={e => {setPassword(e.target.value)}} />\r\n              <button className=\"Submit\" type=\"submit\">Entrar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n\r\n}","import io from 'socket.io-client';\r\n\r\nconst client = io();\r\n\r\nexport default client;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiLogOut, FiPlus } from 'react-icons/fi';\r\nimport { GoTrashcan } from 'react-icons/go';\r\nimport { IoMdAlert } from 'react-icons/io';\r\n\r\nimport './admStyles.css';\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nexport default function AdmInterface() {\r\n    // eslint-disable-next-line\r\n    const [stock, setStock] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const [atualization, setAtualization] = useState(0);\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    let getStock = async () => {\r\n        try {\r\n            const response = await api.get('stock');\r\n            setStock(response.data);\r\n\r\n        } catch(err) {\r\n            console.log(err.response.data);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let auth = async () => {\r\n        const accountId = localStorage.getItem(\"accountId\");\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth(); \r\n        getStock();\r\n        getName();\r\n        socketClient();\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    let setItemName = (item, e) => {\r\n        item.itemName = e.target.value;\r\n        setAtualization(atualization+1);\r\n\r\n    }\r\n\r\n    let atualizateItemName = async (item, id, mode, event={}) => {\r\n        if(mode === 'blur'){\r\n            try {\r\n                const response = await api.post('stock', {\r\n                    id: item.id,\r\n                    changeType: \"itemName\",\r\n                    change: item.itemName,\r\n                })\r\n                \r\n                stock[id] = response.data[0];\r\n                setStock(stock);\r\n                client.emit('reloadEmit');\r\n                \r\n            } catch(err) {\r\n                console.log(err.response.data);\r\n\r\n            }\r\n\r\n            setAtualization(atualization+1);\r\n        }else {\r\n            if(event.key === 'Enter'){\r\n                event.currentTarget.blur();\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    let setItemQuant = (item, e) => {\r\n        if(!(String(e.target.value).length >= 5)){\r\n            item.itemQuant = e.target.value;\r\n        }\r\n        setAtualization(atualization+1);\r\n\r\n    }\r\n\r\n    let atualizateItemQuant = async (item, id, mode, event={}) => {\r\n        if(mode === 'blur'){\r\n            try {\r\n                const response = await api.post('stock', {\r\n                    id: item.id,\r\n                    changeType: \"itemQuant\",\r\n                    change: item.itemQuant,\r\n                })\r\n                \r\n                stock[id] = response.data[0];\r\n                setStock(stock);\r\n                client.emit('reloadEmit');\r\n\r\n            } catch(err) {\r\n                console.log(err.response.data);\r\n\r\n            }\r\n\r\n            setAtualization(atualization+1);\r\n        }else {\r\n            if(event.key === 'Enter'){\r\n                event.currentTarget.blur();\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    let deleteItem = async (item, idx) => {\r\n        try {\r\n\r\n            await api.delete(`stock/${item.id}`);\r\n            client.emit('reloadEmit');\r\n\r\n            stock.splice(idx, 1);\r\n            setStock(stock);\r\n            setAtualization(atualization+1);\r\n\r\n        } catch(err) {\r\n            console.log(err.response.data);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let renderItem = (item, idx) => {\r\n        return (\r\n            <div className=\"AdmItensDiv\" key={item.id}>\r\n                <div className=\"AdmItens\">\r\n                    <div className=\"AdmItemText\"><input className=\"InputItemText\" value={item.itemName}\r\n                    onChange={(e) => {setItemName(item, e)}}\r\n                    onBlur={() => {atualizateItemName(item, idx, 'blur');}}\r\n                    onKeyPress={(e) => {atualizateItemName(item, idx, 'teclado', e)}} /></div>\r\n                    <div className=\"AdmItemQuant\"><input className=\"InputItemQuant\" value={item.itemQuant}\r\n                    type=\"number\"\r\n                    onChange={(e) => {setItemQuant(item, e)}}\r\n                    onBlur={() => {atualizateItemQuant(item, idx, 'blur')}}\r\n                    onKeyPress={(e) => {atualizateItemQuant(item, idx, 'teclado', e)}} /></div>\r\n                    <button className=\"DeleteButton\" onClick={() => {deleteItem(item, idx)}}>\r\n                        <GoTrashcan size={20} color=\"#E02041\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    };\r\n\r\n    let getName = async () => {\r\n        const accountId = localStorage.getItem(\"accountId\");\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n            setName(response.data[0].name);\r\n\r\n        } catch(err) {\r\n            console.log(err.response);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let reloadPage = () => {\r\n        getStock();\r\n\r\n    }\r\n\r\n    let socketClient = () => {\r\n        client.on('reload', () => {\r\n            reloadPage();\r\n\r\n        });\r\n\r\n        client.emit('requestsRequest', '');\r\n\r\n        client.on('requests', requests => {\r\n            if(requests.length === 0) {\r\n                setActive(false);\r\n            } else {\r\n                setActive(true);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    let renderIcon = () => {\r\n        if(active) {\r\n            return (<IoMdAlert size=\"25\" color=\"white\" />);\r\n\r\n        }else {\r\n            return;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"AdmPage\">\r\n            <div className=\"AdmHeader\">\r\n                <div className=\"AdmInitialHeader\">\r\n                    <h1 className=\"AdmName\">Olá, {name}!</h1>\r\n                    <button className=\"AdmBackButton\" onClick={() => {localStorage.setItem('accountId', ''); history.push('/')}}>\r\n                        <FiLogOut size={20} color=\"#E02041\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"AdmTextDiv\">\r\n                <div className=\"AdmTexts\">\r\n                    <div>Itens</div>\r\n                    <div>Quantidade</div>\r\n                    <div>Ações</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Controller\">\r\n                <div className=\"stockVisualization\">\r\n                    {stock.map((item, id) => renderItem(item, id))}\r\n                </div>\r\n            </div>\r\n            <div className=\"PageButtons\">\r\n                <Link to=\"/adm/addItens\">\r\n                    <FiPlus size=\"30\" color=\"#3ddb18\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"RequestsButtons\">\r\n                <Link className=\"RequestsLink\" to=\"/adm/requests\">\r\n                    {renderIcon()}\r\n                    Pedidos\r\n                </Link>\r\n                <Link className=\"EntriesAndExitsButton\" to=\"/adm/entriesAndExits\">\r\n                    Entradas e saidas\r\n                </Link>\r\n            </div>\r\n            <Link className=\"EntriesAndExitsButton\" to=\"/adm/REAE\">\r\n                Registrar entradas/saidas\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FiLogOut, FiSend, FiPlus, FiMinus } from 'react-icons/fi';\r\n\r\nimport './userStyles.css';\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nexport default function UserInterface() {\r\n    // eslint-disable-next-line\r\n    const [stock, setStock] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const accountId = localStorage.getItem(\"accountId\");\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    let getStock = async () => {\r\n        try {\r\n            const response = await api.get('stock');\r\n            setStock(response.data);\r\n\r\n        } catch(err) {\r\n            console.log(err.response.data);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let auth = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/adm');\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth();\r\n        getName();\r\n        getStock();\r\n        socketClient();\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const [requests, setRequests] = useState([]);\r\n    const [active, setActive] = useState(false);\r\n    const [atualization, setAtualization] = useState(1);\r\n\r\n    let requestItem = (item) => {\r\n        let itemName = item.itemName;\r\n        let itemQuant = item.itemQuant;\r\n        let requestQuant = 1;\r\n        let id = item.id;\r\n        switch(requests.length) {\r\n            case 0: \r\n                let re = [{ name, accountId, itemName , itemQuant, id, requestQuant }];\r\n                setRequests(re);\r\n                setActive(true);\r\n                client.emit('request', re);\r\n                break;\r\n\r\n            case 4:\r\n                break;\r\n\r\n            default:\r\n                let exists = false;\r\n                requests.forEach((iten) => {\r\n                    if(iten.id === id) {\r\n                        exists = true;\r\n                    }\r\n                });\r\n\r\n                if(exists === false) {\r\n                    let re = [...requests, { name, accountId, itemName , itemQuant, id, requestQuant }];\r\n                    setRequests(re);\r\n                    setActive(true);\r\n                    setAtualization(atualization+1);\r\n                    client.emit('request', re);\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let RequestItemAction = (item, mode, idx) => {\r\n        switch(mode) {\r\n            case \"+\":\r\n                if(requests[idx].requestQuant <= item.itemQuant - 1) {\r\n                    item.requestQuant = item.requestQuant + 1;\r\n                }\r\n                requests[idx] = item;\r\n\r\n                setRequests(requests);\r\n                client.emit('request', requests);\r\n                console.log(3);\r\n                setAtualization(atualization+1);\r\n                break;\r\n\r\n            default:\r\n                item.requestQuant = item.requestQuant - 1;\r\n                requests[idx] = item;\r\n                if(requests[idx].requestQuant === 0) {\r\n                    requests.splice(idx, 1);\r\n                    setRequests(requests);\r\n                    setAtualization(atualization+1);\r\n                    if(requests.length === 0) {\r\n                        setActive(false);\r\n                    }\r\n\r\n                }else {\r\n                    setRequests(requests);\r\n                    setAtualization(atualization+1);\r\n\r\n                }\r\n                client.emit('request', requests);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let RequestDelete = () => {\r\n        setRequests([]);\r\n        setActive(false);\r\n        client.emit('request', []);\r\n\r\n    }\r\n\r\n    let renderRequests = (item, idx) => {\r\n        return (\r\n            <div className=\"RequestItem\">\r\n                <button className=\"Buttons\" onClick={() => {RequestItemAction(item, \"+\", idx)}}><FiPlus size={20} color=\"#3ddb18\" /></button>\r\n                <div className=\"RequestName\">{item.itemName}: {item.requestQuant}</div>\r\n                <button className=\"Buttons\" onClick={() => {RequestItemAction(item, \"-\", idx)}}><FiMinus size={20} color=\"#fa0404\" /></button>\r\n            </div>\r\n\r\n    )};\r\n\r\n\r\n    let renderItem = (item) => {\r\n        return(\r\n            <div className=\"ItensDiv\">\r\n                <div className=\"Itens\">\r\n                    <div className=\"ItemText\">{item.itemName}</div>\r\n                    <div className=\"ItemQuant\">{item.itemQuant}</div>\r\n                    <button className=\"Request\" onClick={() => {requestItem(item)}}><FiSend size={20} color=\"#1134e7\" /></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let renderButton = () => {\r\n        if(active) {\r\n            return (\r\n                <div className=\"CancelDiv\">\r\n                    <button className=\"CancelButton\" onClick={RequestDelete}>Cancelar todos os pedidos</button>\r\n                </div>\r\n            \r\n            );\r\n\r\n        }else {\r\n            return (<div></div>);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let getName = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n            setName(response.data[0].name);\r\n\r\n        } catch(err) {\r\n            console.log(err.response);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let reloadPage = () => {\r\n        getStock();\r\n\r\n    }\r\n\r\n    let socketClient = () => {\r\n        client.on('reload', () => {\r\n            reloadPage();\r\n\r\n        });\r\n\r\n        client.emit('requestsRequest', '');\r\n\r\n        client.on('requests', requesds => {\r\n            setRequests(requesds);\r\n            setAtualization(atualization+1);\r\n            let count = 0;\r\n            requesds.forEach(item => {\r\n                if(item.accountId === accountId){\r\n                    count++;\r\n\r\n                }\r\n\r\n            });\r\n            if(count !== 0) {\r\n                setActive(true);\r\n            } else {\r\n                setActive(false);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"UserPage\">\r\n            <div className=\"UserHeader\">\r\n                <div className=\"InitialHeader\">\r\n                    <h1>Olá, {name}!</h1>\r\n                    <button className=\"BackButton\" onClick={() => {localStorage.setItem('accountId', ''); history.push('/')}}>\r\n                        <FiLogOut size={20} color=\"#E02041\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"TextDiv\">\r\n                <div className=\"Texts\">\r\n                    <div>Itens</div>\r\n                    <div>Quantidade</div>\r\n                    <div>Ações</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"ConfigVisualization\">\r\n                <div className=\"UserStockVisualization\">\r\n                    {stock.map((item) => renderItem(item))}\r\n                </div>\r\n            </div>\r\n            <div className=\"Requests\">\r\n                <div>Pedidos(max: 4):</div> \r\n                <div className=\"RequestList\">\r\n                    {\r\n                        // eslint-disable-next-line\r\n                        requests.map((item, idx) => {\r\n                            if(item.accountId === accountId) {\r\n                                return renderRequests(item, idx);\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            {renderButton()}\r\n        </div>\r\n    );\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nimport './addStyles.css';\r\n\r\n\r\nexport default function AddItens() {\r\n    const [name, setName] = useState('');\r\n    const [quant, setQuant] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        auth();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    const setItemQuant = e => {\r\n        if(!(String(e.target.value).length >= 5)){\r\n            setQuant(e.target.value);\r\n        }\r\n    }\r\n\r\n    const add = e => {\r\n        try {   \r\n            const response = api.post('createStock', {\r\n                itemName: name,\r\n                itemQuant: quant,\r\n            })\r\n            client.emit('reloadEmit');\r\n\r\n            console.log(response.data);\r\n\r\n\r\n        } catch(err) {\r\n            console.log(err.response);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let auth = async () => {\r\n        const accountId = localStorage.getItem(\"accountId\");\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddPage\">\r\n            <div className=\"AddHeader\">\r\n                <h1>Adicionar itens!</h1>\r\n                <Link to=\"/adm\">\r\n                    <BsArrowReturnLeft size={20} color=\"#E02041\" />\r\n                </Link>\r\n            </div>\r\n            <form className=\"AddForm\" onSubmit={add}>\r\n                <div className=\"Inputs\">\r\n                    <input placeholder=\"Nome do item\" className=\"IntoInputs\"\r\n                    value={name}\r\n                    onChange={(e) => {setName(e.target.value)}} />\r\n                    <input placeholder=\"Quantidade do item\" className=\"IntoInputs\" type=\"number\"\r\n                    value={quant}\r\n                    onChange={setItemQuant} />\r\n                </div>\r\n                <button type=\"submit\" className=\"AddButton\" >Criar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { GoTrashcan } from 'react-icons/go';\r\n\r\nimport './requestStyles.css';\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nexport default function Requests() {\r\n    const [requests, setRequests] = useState([]);\r\n    const [atualization, setAtualization] = useState(1);\r\n    const accountId = localStorage.getItem(\"accountId\");\r\n\r\n    const history = useHistory();\r\n\r\n    let auth = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth();\r\n        socketClient();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n    \r\n    let socketClient = () => {\r\n        client.emit('requestsRequest', '');\r\n\r\n        client.on('requests', (requests, mode) => {\r\n            if(mode !== accountId) { \r\n                setRequests(requests);\r\n                setAtualization(atualization+1);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    let requestComplete = async (item, idx) => {\r\n        try {\r\n            const change = item.itemQuant - item.requestQuant;\r\n            await api.post('/stock', {\r\n                id: item.id,\r\n                changeType: 'itemQuant',\r\n                change: change,\r\n            });\r\n            await api.post('/EntriesExits', {\r\n                type: \"exit\",\r\n                changes: item.requestQuant,\r\n                itemThatChange: item.itemName,\r\n                alterator: item.name,\r\n                state: change\r\n\r\n            });\r\n\r\n            client.emit('reloadEmit');\r\n\r\n        }catch(err) {}\r\n\r\n        requests.splice(idx, 1);\r\n        const re = requests;\r\n        client.emit('requestComplete', re, accountId);\r\n        setRequests(re);\r\n        setAtualization(atualization+1);\r\n    }\r\n\r\n    let requestDelete = (idx) => {\r\n        requests.splice(idx, 1);\r\n        const re = requests;\r\n        client.emit('requestComplete', re, accountId);\r\n        setRequests(re);\r\n        setAtualization(atualization+1);\r\n\r\n    }\r\n\r\n    let renderRequests = (item, idx) => {\r\n        return (\r\n            <div className=\"RequestsItem\">\r\n                <div className=\"RequestsName\">\r\n                    {item.itemName}\r\n                </div>\r\n                <div className=\"RequestUser\">\r\n                    de {item.name}\r\n                </div>\r\n                |\r\n                <div className=\"RequestQuant\">\r\n                    quantidade: {item.requestQuant}\r\n                </div>\r\n                |\r\n                <button onClick={() => {requestComplete(item, idx);}} className=\"RequestsButton\">\r\n                    Pedido entregue\r\n                </button>\r\n                |\r\n                <button onClick={() => {requestDelete(idx)}} className='DeleteRequest'>\r\n                    <GoTrashcan size=\"30\" color=\"#E02041\" />\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"RequestPage\">\r\n            <div className=\"RequestHeader\">\r\n                Pedidos\r\n                <Link to=\"/adm\">\r\n                    <BsArrowReturnLeft size={20} color=\"#E02041\" />\r\n                </Link>\r\n            </div>\r\n            {requests.map((item, idx) => renderRequests(item, idx))}\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa'\r\n\r\nimport './EAEStyles.css'\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nexport default function EntriesAndExits() {\r\n\r\n    const accountId = localStorage.getItem('accountId');\r\n\r\n    const [eAE, setEAE] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [entries, setEntries] = useState(false);\r\n    const [exits, setExits] = useState(false);\r\n\r\n    const [EAEVisualizable, setEAEV] = useState([]);\r\n\r\n    const [optionValue, setOptionValue] = useState('Aguardando...');\r\n    const [optionVisible, setOptionVisible] = useState('Desactivated');\r\n\r\n    const history = useHistory();\r\n\r\n    let auth = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let socketClient = () => {\r\n        client.on('reload', () => {\r\n            getEAE();\r\n        });\r\n\r\n    }\r\n\r\n    let getEAE = async () => {\r\n        setOptionValue('Aguardando');\r\n        setOptionVisible('Desactivated');\r\n        setEAEV([]);\r\n        setEntries(false);\r\n        setExits(false);\r\n        try {\r\n            const response = await api.get('/EntriesExits');\r\n            if(response.data.last_date.date !== null) {\r\n                let eAEi = response.data.entries_and_exits.reverse();\r\n                setEAE(eAEi);\r\n\r\n                let datesi = [response.data.last_date.date];\r\n                setDates(datesi);\r\n                setOptionValue(response.data.last_date.date);\r\n\r\n                eAEi.forEach(EAEItem => {\r\n                    datesi = [...datesi, EAEItem.date];\r\n                });\r\n\r\n                setEAE(eAEi.reverse());\r\n\r\n                datesi.forEach((dateItem, idx) => {\r\n                    datesi.forEach((datItem) => {\r\n                        if(dateItem === datItem) {\r\n                            datesi.splice(idx, 1);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                setDates(datesi);\r\n\r\n            } else {\r\n                setOptionValue('Aguardando...')\r\n\r\n            }\r\n\r\n        } catch(err) {}\r\n\r\n    }    \r\n\r\n    let renderDates = (item) => {\r\n        return (\r\n            <div className=\"Option\" onClick={() => {setOptionValue(item)}}>\r\n                <label className=\"OptionValue\">{item}</label>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    let defineVisualizableEAE = () => {\r\n        let VEAE = [];\r\n        setEntries(false);\r\n        setExits(false);\r\n        eAE.forEach(item => {\r\n            if(item.date === optionValue) {\r\n                VEAE = [...VEAE, item];\r\n                setEAEV(VEAE);\r\n\r\n            }\r\n\r\n        });\r\n\r\n        if(VEAE.length !== 0) { \r\n            VEAE.forEach(item => {\r\n                if(item.type === 'entries') {\r\n                    setEntries(true);\r\n\r\n                } else if(item.type === 'exit') {\r\n                    setExits(true);\r\n\r\n                }\r\n\r\n            });\r\n        } else {\r\n            setEntries(false);\r\n            setExits(false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let renderEAEV = (item) => {\r\n        return (\r\n            <div className=\"Alteration\">\r\n                Alteração em {item.itemThatChange}: foi {item.type === \"entries\" ? \"adicionado\" : \"retirado\"} {item.changes} {parseInt(item.changes) > 1 ? \"unidades\" : \"unidade\"}\r\n                <div>Quantidade final: {item.state}</div>\r\n                <div>Horário da alteração: {item.time}</div>\r\n                <div>Alterador: {item.alterator}</div>\r\n            </div>\r\n            \r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth();\r\n        socketClient();\r\n        getEAE();\r\n\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        defineVisualizableEAE();\r\n\r\n        //eslint-disable-next-line\r\n    }, [optionValue]);\r\n\r\n    return (\r\n        <div className=\"EAEPage\">\r\n            <div className=\"EAEHeader\">\r\n                <h1>Entradas e Saidas</h1>\r\n                <div className=\"SelectBox\" onClick={() => {optionVisible === 'Desactivated' ? setOptionVisible('Activated') : setOptionVisible('Desactivated')}}>\r\n                    {optionValue !== 'Aguardando...' ?\r\n                        <div>\r\n                            <div className=\"Selected\" id={optionVisible}>\r\n                                <label className=\"OptionValue\" id=\"Selected\">{optionValue}</label>\r\n                                {optionVisible === 'Desactivated' ? <FaChevronDown size={20} color=\"black\" /> : <FaChevronUp size={20} color=\"black\" />}\r\n                            </div>\r\n                            <div className=\"Options\" id={optionVisible}>\r\n                                {dates.map((item) => {\r\n                                    return renderDates(item);\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"Selected\" id=\"Nothing\"> \r\n                            <label className=\"OptionValue\" id=\"Selected\">{optionValue}</label>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <Link className=\"EAEReturnButton\" to=\"/adm\">\r\n                    <BsArrowReturnLeft size={20} color=\"#E02041\" />\r\n                </Link>\r\n            </div>\r\n            {optionValue !== 'Aguardando...' ?\r\n            <div>\r\n                <div className=\"EAEDiv\">\r\n                    <h1>Entradas</h1>\r\n                    {entries ? <div className=\"EAEOfTheDay\">{\r\n                    //eslint-disable-next-line\r\n                    EAEVisualizable.map(item => {\r\n                        if(item.type === 'entries') {\r\n                            return renderEAEV(item);\r\n                        }\r\n                    })}</div> : <div className=\"NothingEAE\">Nenhuma entrada nesse dia</div>}\r\n                </div>        \r\n                <div className=\"EAEDiv\">\r\n                    <h1>Saidas</h1>\r\n                    {exits ? <div className=\"EAEOfTheDay\">{\r\n                    //eslint-disable-next-line\r\n                    EAEVisualizable.map(item => {\r\n                        if(item.type === 'exit') {\r\n                            return renderEAEV(item);\r\n                        }\r\n                    })}</div> : <div className=\"NothingEAE\">Nenhuma saída nesse dia</div>}\r\n                </div>\r\n            </div>\r\n            :\r\n            <div></div>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiLogOut } from 'react-icons/fi';\r\n\r\nimport './REAEStyles.css';\r\n\r\nexport default function RegisterEAE() {\r\n    return (\r\n        <div className=\"REAEPage\">\r\n            <div className=\"REAEHeader\">\r\n                <h1 className=\"REAEh1\">Registrar entradas e saidas</h1>\r\n                <Link to=\"/adm\">\r\n                    <FiLogOut size={20} color=\"#E02041\" />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Login from './pages/Login';\r\nimport AdmInterface from './pages/AdmInterface';\r\nimport UserInterface from './pages/UserInterface';\r\nimport AddItens from './pages/AddItens';\r\nimport Requests from './pages/Requests';\r\nimport EntriesAndExits from './pages/EntriesAndExits';\r\nimport RegisterEAE from './pages/RegisterEAE';\r\n\r\nexport default function Routes() {\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Login} />\r\n                <Route path=\"/adm\" exact component={AdmInterface} />\r\n                <Route path=\"/user\" component={UserInterface} />\r\n                <Route path=\"/adm/addItens\" component={AddItens} />\r\n                <Route path=\"/adm/requests\" component={Requests} />\r\n                <Route path=\"/adm/entriesAndExits\" component={EntriesAndExits} />\r\n                <Route path=\"/adm/REAE\" component={RegisterEAE} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n\r\n}","import React from 'react';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);;\n"],"sourceRoot":""}