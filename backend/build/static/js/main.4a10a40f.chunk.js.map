{"version":3,"sources":["services/api.js","pages/Login/index.js","services/socket.js","pages/AdmInterface/index.js","pages/UserInterface/index.js","pages/AddItens/index.js","pages/Requests/index.js","pages/EntriesAndExits/index.js","pages/RegisterEAE/index.js","routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","Login","useState","name","setName","password","setPassword","clasName","setClasName","classPassword","setClassPassword","history","useHistory","accountId","localStorage","getItem","e","a","preventDefault","post","response","data","accountType","setItem","push","error","setTimeout","useEffect","logWithID","id","type","className","onSubmit","placeholder","value","onChange","target","client","io","AdmInterface","stock","setStock","atualization","setAtualization","active","setActive","getStock","get","console","log","auth","getName","socketClient","atualizateItemName","item","mode","event","changeType","change","itemName","emit","key","currentTarget","blur","atualizateItemQuant","itemQuant","deleteItem","idx","delete","splice","renderItem","setItemName","onBlur","onKeyPress","String","length","setItemQuant","onClick","size","color","on","requests","map","to","UserInterface","parseInt","setRequests","RequestItemAction","requestQuant","RequestDelete","define","forEach","index","re","exists","iten","requestItem","requesds","count","renderRequests","AddItens","quant","setQuant","err","Requests","requestComplete","changes","itemThatChange","alterator","state","requestDelete","EntriesAndExits","eAE","setEAE","dates","setDates","entries","setEntries","exits","setExits","EAEVisualizable","setEAEV","optionValue","setOptionValue","optionVisible","setOptionVisible","getEAE","last_date","date","eAEi","entries_and_exits","reverse","datesi","EAEItem","dateItem","datItem","renderEAEV","time","VEAE","defineVisualizableEAE","renderDates","RegisterEAE","inputAlter","setIA","inputQuant","setIQ","itemOptionValue","setItemOptionValue","itemIDView","setItemIDView","typeOptionValue","setTypeOptionValue","typeIDView","setTypeIDView","renderStockOption","alert","createREAE","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a10a40f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: `http://localhost:80/`,\r\n});\r\n\r\nexport default api;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './logStyles.css';\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function Login() {\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [clasName, setClasName] = useState('InputBox');\r\n    const [classPassword, setClassPassword] = useState('InputBox');\r\n    const history = useHistory();\r\n    const accountId = localStorage.getItem('accountId');\r\n\r\n    useEffect(() => {\r\n        logWithID();\r\n\r\n    });\r\n\r\n    async function logar(e) {\r\n        e.preventDefault();\r\n\r\n        if (name && password) {\r\n            try {\r\n                const response = await api.post('/enterProfile', {name, password});\r\n\r\n                setClasName('InputBox');\r\n                setClassPassword('InputBox');\r\n\r\n                if(response.data.accountType === \"adm\") {\r\n                    localStorage.setItem(\"accountId\", response.data.accountId);\r\n                    history.push('/adm');\r\n\r\n                } else {\r\n                    localStorage.setItem(\"accountId\", response.data.accountId);\r\n                    history.push('/user');\r\n\r\n                }\r\n\r\n            } catch(err) {\r\n                if(err.response.data.error === \"doesn't exist any user with this name\") {\r\n                    setClasName('ErrorBox');\r\n                    setClassPassword('InputBox');\r\n                    setTimeout(() => {\r\n                        setClasName('InputBox');\r\n        \r\n                    }, 5000);\r\n\r\n                } else {\r\n                    setClassPassword('ErrorBox');\r\n                    setClasName('InputBox');\r\n                    setTimeout(() => {\r\n                        setClassPassword('InputBox');\r\n        \r\n                    }, 5000);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }else {\r\n            setClasName('ErrorBox');\r\n            setClassPassword('ErrorBox');\r\n            setTimeout(() => {\r\n                setClasName('InputBox');\r\n                setClassPassword('InputBox');\r\n\r\n            }, 5000);\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const logWithID = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/adm');\r\n\r\n            } else {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"LogPage\">\r\n            <h1 className=\"Title\">Estoque Tecnet</h1>\r\n            <form className=\"Form\" onSubmit={logar}>\r\n              <h1 className=\"Header\">Login</h1>\r\n              <input className={clasName} placeholder=\"Usuário\" value={name} onChange={e => {setName(e.target.value)}} />  \r\n              <input className={classPassword} type=\"password\" placeholder=\"Senha\" value={password} onChange={e => {setPassword(e.target.value)}} />\r\n              <button className=\"Submit\" type=\"submit\">Entrar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n\r\n}","import io from 'socket.io-client';\r\n\r\nconst client = io();\r\n\r\nexport default client;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiLogOut, FiPlus } from 'react-icons/fi';\r\nimport { GoTrashcan } from 'react-icons/go';\r\nimport { IoMdAlert } from 'react-icons/io';\r\n\r\nimport './admStyles.css';\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nexport default function AdmInterface() {\r\n    // eslint-disable-next-line\r\n    const [stock, setStock] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const [atualization, setAtualization] = useState(0);\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    let getStock = async () => {\r\n        try {\r\n            const response = await api.get('stock');\r\n            setStock(response.data);\r\n\r\n        } catch(err) {\r\n            console.log(err.response.data);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let auth = async () => {\r\n        const accountId = localStorage.getItem(\"accountId\");\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth(); \r\n        getStock();\r\n        getName();\r\n        socketClient();\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    let setItemName = (item, e) => {\r\n        item.itemName = e.target.value;\r\n        setAtualization(atualization+1);\r\n\r\n    }\r\n\r\n    let atualizateItemName = async (item, id, mode, event={}) => {\r\n        if(mode === 'blur'){\r\n            try {\r\n                const response = await api.post('stock', {\r\n                    id: item.id,\r\n                    changeType: \"itemName\",\r\n                    change: item.itemName,\r\n                })\r\n                \r\n                stock[id] = response.data[0];\r\n                setStock(stock);\r\n                client.emit('reloadEmit');\r\n                \r\n            } catch(err) {\r\n                console.log(err.response.data);\r\n\r\n            }\r\n\r\n            setAtualization(atualization+1);\r\n        }else {\r\n            if(event.key === 'Enter'){\r\n                event.currentTarget.blur();\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    let setItemQuant = (item, e) => {\r\n        if(!(String(e.target.value).length >= 5)){\r\n            item.itemQuant = e.target.value;\r\n        }\r\n        setAtualization(atualization+1);\r\n\r\n    }\r\n\r\n    let atualizateItemQuant = async (item, id, mode, event={}) => {\r\n        if(mode === 'blur'){\r\n            try {\r\n                const response = await api.post('stock', {\r\n                    id: item.id,\r\n                    changeType: \"itemQuant\",\r\n                    change: item.itemQuant,\r\n                })\r\n                \r\n                stock[id] = response.data[0];\r\n                setStock(stock);\r\n                client.emit('reloadEmit');\r\n\r\n            } catch(err) {\r\n                console.log(err.response.data);\r\n\r\n            }\r\n\r\n            setAtualization(atualization+1);\r\n        }else {\r\n            if(event.key === 'Enter'){\r\n                event.currentTarget.blur();\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    let deleteItem = async (item, idx) => {\r\n        try {\r\n\r\n            await api.delete(`stock/${item.id}`);\r\n            client.emit('reloadEmit');\r\n\r\n            stock.splice(idx, 1);\r\n            setStock(stock);\r\n            setAtualization(atualization+1);\r\n\r\n        } catch(err) {\r\n            console.log(err.response.data);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let renderItem = (item, idx) => {\r\n        return (\r\n            <div className=\"AdmItensDiv\" key={item.id}>\r\n                <div className=\"AdmItens\">\r\n                    <div className=\"AdmItemText\"><input className=\"InputItemText\" value={item.itemName}\r\n                    onChange={(e) => {setItemName(item, e)}}\r\n                    onBlur={() => {atualizateItemName(item, idx, 'blur');}}\r\n                    onKeyPress={(e) => {atualizateItemName(item, idx, 'teclado', e)}} /></div>\r\n                    <div className=\"AdmItemQuant\"><input className=\"InputItemQuant\" value={item.itemQuant}\r\n                    type=\"number\"\r\n                    onChange={(e) => {setItemQuant(item, e)}}\r\n                    onBlur={() => {atualizateItemQuant(item, idx, 'blur')}}\r\n                    onKeyPress={(e) => {atualizateItemQuant(item, idx, 'teclado', e)}} /></div>\r\n                    <button className=\"DeleteButton\" onClick={() => {deleteItem(item, idx)}}>\r\n                        <GoTrashcan size={20} color=\"#E02041\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    };\r\n\r\n    let getName = async () => {\r\n        const accountId = localStorage.getItem(\"accountId\");\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n            setName(response.data[0].name);\r\n\r\n        } catch(err) {\r\n            console.log(err.response);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let reloadPage = () => {\r\n        getStock();\r\n\r\n    }\r\n\r\n    let socketClient = () => {\r\n        client.on('reload', () => {\r\n            reloadPage();\r\n\r\n        });\r\n\r\n        client.emit('requestsRequest', '');\r\n\r\n        client.on('requests', requests => {\r\n            if(requests.length === 0) {\r\n                setActive(false);\r\n            } else {\r\n                setActive(true);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    let renderIcon = () => {\r\n        if(active) {\r\n            return (<IoMdAlert size=\"25\" color=\"white\" />);\r\n\r\n        }else {\r\n            return;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"AdmPage\">\r\n            <div className=\"AdmHeader\">\r\n                <div className=\"AdmInitialHeader\">\r\n                    <h1 className=\"AdmName\">Olá, {name}!</h1>\r\n                    <button className=\"AdmBackButton\" onClick={() => {localStorage.setItem('accountId', ''); history.push('/')}}>\r\n                        <FiLogOut size={20} color=\"#E02041\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"AdmTextDiv\">\r\n                <div className=\"AdmTexts\">\r\n                    <div>Itens</div>\r\n                    <div>Quantidade</div>\r\n                    <div>Ações</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Controller\">\r\n                <div className=\"stockVisualization\">\r\n                    {stock.map((item, id) => renderItem(item, id))}\r\n                </div>\r\n            </div>\r\n            <div className=\"PageButtons\">\r\n                <Link to=\"/adm/addItens\">\r\n                    <FiPlus size=\"30\" color=\"#3ddb18\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"RequestsButtons\">\r\n                <Link className=\"RequestsLink\" to=\"/adm/requests\">\r\n                    {renderIcon()}\r\n                    Pedidos\r\n                </Link>\r\n                <Link className=\"EntriesAndExitsButton\" to=\"/adm/entriesAndExits\">\r\n                    Entradas e saidas\r\n                </Link>\r\n            </div>\r\n            <Link className=\"EntriesAndExitsButton\" to=\"/adm/REAE\">\r\n                Registrar entradas/saidas\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FiLogOut, FiSend, FiPlus, FiMinus } from 'react-icons/fi';\r\n\r\nimport './userStyles.css';\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nexport default function UserInterface() {\r\n    // eslint-disable-next-line\r\n    const [stock, setStock] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const [accountId, setAccountID] = useState(parseInt(localStorage.getItem(\"accountId\")));\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    let getStock = async () => {\r\n        try {\r\n            const response = await api.get('stock');\r\n            setStock(response.data);\r\n\r\n        } catch(err) {\r\n            console.log(err.response.data);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let auth = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/adm');\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth();\r\n        getName();\r\n        getStock();\r\n        socketClient();\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const [requests, setRequests] = useState([]);\r\n    const [active, setActive] = useState(false);\r\n    const [atualization, setAtualization] = useState(1);\r\n\r\n    let requestItem = (item) => {\r\n        let itemName = item.itemName;\r\n        let itemQuant = item.itemQuant;\r\n        let requestQuant = 1;\r\n        let id = item.id;\r\n        if(parseInt(itemQuant) !== 0) {\r\n            switch(requests.length) {\r\n                case 0: \r\n                    let re = [{ name, accountId, itemName , itemQuant, id, requestQuant }];\r\n                    setRequests(re);\r\n                    setActive(true);\r\n                    client.emit('request', re);\r\n                    break;\r\n\r\n                case 4:\r\n                    break;\r\n\r\n                default:\r\n                    let exists = false;\r\n                    requests.forEach((iten) => {\r\n                        if(iten.id === id) {\r\n                            exists = true;\r\n                        }\r\n                    });\r\n\r\n                    if(exists === false) {\r\n                        let re = [...requests, { name, accountId, itemName , itemQuant, id, requestQuant }];\r\n                        setRequests(re);\r\n                        setActive(true);\r\n                        setAtualization(atualization+1);\r\n                        client.emit('request', re);\r\n                    }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let RequestItemAction = (item, mode, idx) => {\r\n        switch(mode) {\r\n            case \"+\":\r\n                if(requests[idx].requestQuant <= item.itemQuant - 1) {\r\n                    item.requestQuant = item.requestQuant + 1;\r\n                }\r\n                requests[idx] = item;\r\n\r\n                setRequests(requests);\r\n                client.emit('request', requests);\r\n                console.log(3);\r\n                setAtualization(atualization+1);\r\n                break;\r\n\r\n            default:\r\n                item.requestQuant = item.requestQuant - 1;\r\n                requests[idx] = item;\r\n                if(requests[idx].requestQuant === 0) {\r\n                    requests.splice(idx, 1);\r\n                    setRequests(requests);\r\n                    setAtualization(atualization+1);\r\n                    if(requests.length === 0) {\r\n                        setActive(false);\r\n                    }\r\n\r\n                }else {\r\n                    setRequests(requests);\r\n                    setAtualization(atualization+1);\r\n\r\n                }\r\n                client.emit('request', requests);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let RequestDelete = () => {\r\n        const requesds = requests;\r\n        let define = [];\r\n\r\n        requesds.forEach((item, index) => {\r\n            if(!(accountId === item.accountId)) {\r\n                define = [...define, item];\r\n            }\r\n        });\r\n\r\n        setRequests(define);\r\n        setActive(false);\r\n        client.emit('request', define);\r\n\r\n    }\r\n\r\n    let renderRequests = (item, idx) => {\r\n        if(accountId === item.accountId) {\r\n            return (\r\n                <div className=\"RequestItem\">\r\n                    <button className=\"Buttons\" onClick={() => {RequestItemAction(item, \"+\", idx)}}><FiPlus size={20} color=\"#3ddb18\" /></button>\r\n                    <div className=\"RequestName\">{item.itemName}: {item.requestQuant}</div>\r\n                    <button className=\"Buttons\" onClick={() => {RequestItemAction(item, \"-\", idx)}}><FiMinus size={20} color=\"#fa0404\" /></button>\r\n                </div>\r\n            );    \r\n        }\r\n    }\r\n\r\n\r\n    let renderItem = (item) => {\r\n        return(\r\n            <div className=\"ItensDiv\">\r\n                <div className=\"Itens\">\r\n                    <div className=\"ItemText\">{item.itemName}</div>\r\n                    <div className=\"ItemQuant\">{item.itemQuant}</div>\r\n                    <button className=\"Request\" onClick={() => {requestItem(item)}}><FiSend size={20} color=\"#1134e7\" /></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let renderButton = () => {\r\n        if(active) {\r\n            return (\r\n                <div className=\"CancelDiv\">\r\n                    <button className=\"CancelButton\" onClick={RequestDelete}>Cancelar todos os pedidos</button>\r\n                </div>\r\n            \r\n            );\r\n\r\n        }else {\r\n            return (<div></div>);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let getName = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n            setName(response.data[0].name);\r\n\r\n        } catch(err) {\r\n            console.log(err.response);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let reloadPage = () => {\r\n        getStock();\r\n\r\n    }\r\n\r\n    let socketClient = () => {\r\n        client.on('reload', () => {\r\n            reloadPage();\r\n\r\n        });\r\n\r\n        client.emit('requestsRequest', '');\r\n\r\n        client.on('requests', requesds => {\r\n            setRequests(requesds);\r\n            setAtualization(atualization+1);\r\n            console.log(requesds);\r\n            console.log(accountId);\r\n            let count = 0;\r\n            requesds.forEach(item => {\r\n                if(item.accountId === accountId){\r\n                    count++;\r\n\r\n                }\r\n\r\n            });\r\n            if(count !== 0) {\r\n                setActive(true);\r\n            } else {\r\n                setActive(false);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"UserPage\">\r\n            <div className=\"UserHeader\">\r\n                <div className=\"InitialHeader\">\r\n                    <h1>Olá, {name}!</h1>\r\n                    <button className=\"BackButton\" onClick={() => {localStorage.setItem('accountId', ''); history.push('/')}}>\r\n                        <FiLogOut size={20} color=\"#E02041\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"TextDiv\">\r\n                <div className=\"Texts\">\r\n                    <div>Itens</div>\r\n                    <div>Quantidade</div>\r\n                    <div>Ações</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"ConfigVisualization\">\r\n                <div className=\"UserStockVisualization\">\r\n                    {stock.map((item) => renderItem(item))}\r\n                </div>\r\n            </div>\r\n            <div className=\"Requests\">\r\n                <div>Pedidos(max: 4):</div> \r\n                <div className=\"RequestList\">\r\n                    {\r\n                        // eslint-disable-next-line\r\n                        requests.map((item, idx) => {\r\n                            return renderRequests(item, idx);\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            {renderButton()}\r\n        </div>\r\n    );\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nimport './addStyles.css';\r\n\r\n\r\nexport default function AddItens() {\r\n    const [name, setName] = useState('');\r\n    const [quant, setQuant] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        auth();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    const setItemQuant = e => {\r\n        if(!(String(e.target.value).length >= 5)){\r\n            setQuant(e.target.value);\r\n        }\r\n    }\r\n\r\n    const add = e => {\r\n        try {   \r\n            const response = api.post('createStock', {\r\n                itemName: name,\r\n                itemQuant: quant,\r\n            })\r\n            client.emit('reloadEmit');\r\n\r\n            console.log(response.data);\r\n\r\n\r\n        } catch(err) {\r\n            console.log(err.response);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let auth = async () => {\r\n        const accountId = localStorage.getItem(\"accountId\");\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddPage\">\r\n            <div className=\"AddHeader\">\r\n                <h1>Adicionar itens!</h1>\r\n                <Link to=\"/adm\">\r\n                    <BsArrowReturnLeft size={20} color=\"#E02041\" />\r\n                </Link>\r\n            </div>\r\n            <form className=\"AddForm\" onSubmit={add}>\r\n                <div className=\"Inputs\">\r\n                    <input placeholder=\"Nome do item\" className=\"IntoInputs\"\r\n                    value={name}\r\n                    onChange={(e) => {setName(e.target.value)}} />\r\n                    <input placeholder=\"Quantidade do item\" className=\"IntoInputs\" type=\"number\"\r\n                    value={quant}\r\n                    onChange={setItemQuant} />\r\n                </div>\r\n                <button type=\"submit\" className=\"AddButton\" >Criar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { GoTrashcan } from 'react-icons/go';\r\n\r\nimport './requestStyles.css';\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nexport default function Requests() {\r\n    const [requests, setRequests] = useState([]);\r\n    const [atualization, setAtualization] = useState(1);\r\n    const accountId = localStorage.getItem(\"accountId\");\r\n\r\n    const history = useHistory();\r\n\r\n    let auth = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth();\r\n        socketClient();\r\n\r\n        //eslint-disable-next-line\r\n    }, [])\r\n    \r\n    let socketClient = () => {\r\n        client.emit('requestsRequest', '');\r\n\r\n        client.on('requests', (requests, mode) => {\r\n            if(mode !== accountId) { \r\n                setRequests(requests);\r\n                setAtualization(atualization+1);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    let requestComplete = async (item, idx) => {\r\n        try {\r\n            const change = item.itemQuant - item.requestQuant;\r\n            await api.post('/stock', {\r\n                id: item.id,\r\n                changeType: 'itemQuant',\r\n                change: change,\r\n            });\r\n            await api.post('/EntriesExits', {\r\n                type: \"exit\",\r\n                changes: item.requestQuant,\r\n                itemThatChange: item.itemName,\r\n                alterator: item.name,\r\n                state: change\r\n\r\n            });\r\n\r\n            client.emit('reloadEmit');\r\n\r\n        }catch(err) {}\r\n\r\n        requests.splice(idx, 1);\r\n        const re = requests;\r\n        client.emit('requestComplete', re, accountId);\r\n        setRequests(re);\r\n        setAtualization(atualization+1);\r\n    }\r\n\r\n    let requestDelete = (idx) => {\r\n        requests.splice(idx, 1);\r\n        const re = requests;\r\n        client.emit('requestComplete', re, accountId);\r\n        setRequests(re);\r\n        setAtualization(atualization+1);\r\n\r\n    }\r\n\r\n    let renderRequests = (item, idx) => {\r\n        return (\r\n            <div className=\"RequestsItem\">\r\n                <div className=\"RequestsName\">\r\n                    {item.itemName}\r\n                </div>\r\n                <div className=\"RequestUser\">\r\n                    de {item.name}\r\n                </div>\r\n                |\r\n                <div className=\"RequestQuant\">\r\n                    quantidade: {item.requestQuant}\r\n                </div>\r\n                |\r\n                <button onClick={() => {requestComplete(item, idx);}} className=\"RequestsButton\">\r\n                    Pedido entregue\r\n                </button>\r\n                |\r\n                <button onClick={() => {requestDelete(idx)}} className='DeleteRequest'>\r\n                    <GoTrashcan size=\"30\" color=\"#E02041\" />\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"RequestPage\">\r\n            <div className=\"RequestHeader\">\r\n                Pedidos\r\n                <Link to=\"/adm\">\r\n                    <BsArrowReturnLeft size={20} color=\"#E02041\" />\r\n                </Link>\r\n            </div>\r\n            {requests.map((item, idx) => renderRequests(item, idx))}\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa'\r\n\r\nimport './EAEStyles.css'\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nexport default function EntriesAndExits() {\r\n\r\n    const accountId = localStorage.getItem('accountId');\r\n\r\n    const [eAE, setEAE] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [entries, setEntries] = useState(false);\r\n    const [exits, setExits] = useState(false);\r\n\r\n    const [EAEVisualizable, setEAEV] = useState([]);\r\n\r\n    const [optionValue, setOptionValue] = useState('Aguardando...');\r\n    const [optionVisible, setOptionVisible] = useState('Desactivated');\r\n\r\n    const history = useHistory();\r\n\r\n    let auth = async () => {\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let socketClient = () => {\r\n        client.on('reload', () => {\r\n            getEAE();\r\n        });\r\n\r\n    }\r\n\r\n    let getEAE = async () => {\r\n        setOptionValue('Aguardando');\r\n        setOptionVisible('Desactivated');\r\n        setEAEV([]);\r\n        setEntries(false);\r\n        setExits(false);\r\n        try {\r\n            const response = await api.get('/EntriesExits');\r\n            if(response.data.last_date.date !== null) {\r\n                let eAEi = response.data.entries_and_exits.reverse();\r\n                setEAE(eAEi);\r\n\r\n                let datesi = [response.data.last_date.date];\r\n                setDates(datesi);\r\n                setOptionValue(response.data.last_date.date);\r\n\r\n                eAEi.forEach(EAEItem => {\r\n                    datesi = [...datesi, EAEItem.date];\r\n                });\r\n\r\n                setEAE(eAEi.reverse());\r\n\r\n                datesi.forEach((dateItem, idx) => {\r\n                    datesi.forEach((datItem) => {\r\n                        if(dateItem === datItem) {\r\n                            datesi.splice(idx, 1);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                setDates(datesi);\r\n\r\n            } else {\r\n                setOptionValue('Aguardando...')\r\n\r\n            }\r\n\r\n        } catch(err) {}\r\n\r\n    }    \r\n\r\n    let renderDates = (item) => {\r\n        return (\r\n            <div className=\"Option\" onClick={() => {setOptionValue(item)}}>\r\n                <label className=\"OptionValue\">{item}</label>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    let defineVisualizableEAE = () => {\r\n        let VEAE = [];\r\n        setEntries(false);\r\n        setExits(false);\r\n        eAE.forEach(item => {\r\n            if(item.date === optionValue) {\r\n                VEAE = [...VEAE, item];\r\n                setEAEV(VEAE);\r\n\r\n            }\r\n\r\n        });\r\n\r\n        if(VEAE.length !== 0) { \r\n            VEAE.forEach(item => {\r\n                if(item.type === 'entries') {\r\n                    setEntries(true);\r\n\r\n                } else if(item.type === 'exit') {\r\n                    setExits(true);\r\n\r\n                }\r\n\r\n            });\r\n        } else {\r\n            setEntries(false);\r\n            setExits(false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let renderEAEV = (item) => {\r\n        return (\r\n            <div className=\"Alteration\">\r\n                Alteração em {item.itemThatChange}: foi {item.type === \"entries\" ? \"adicionado\" : \"retirado\"} {item.changes} {parseInt(item.changes) > 1 ? \"unidades\" : \"unidade\"}\r\n                <div>Quantidade final: {item.state}</div>\r\n                <div>Horário da alteração: {item.time}</div>\r\n                <div>Alterador: {item.alterator}</div>\r\n            </div>\r\n            \r\n        );\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth();\r\n        socketClient();\r\n        getEAE();\r\n\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        defineVisualizableEAE();\r\n\r\n        //eslint-disable-next-line\r\n    }, [optionValue]);\r\n\r\n    return (\r\n        <div className=\"EAEPage\">\r\n            <div className=\"EAEHeader\">\r\n                <h1>Entradas e Saidas</h1>\r\n                <div className=\"SelectBox\" onClick={() => {optionVisible === 'Desactivated' ? setOptionVisible('Activated') : setOptionVisible('Desactivated')}}>\r\n                    {optionValue !== 'Aguardando...' ?\r\n                        <div>\r\n                            <div className=\"Selected\" id={optionVisible}>\r\n                                <label className=\"OptionValue\" id=\"Selected\">{optionValue}</label>\r\n                                {optionVisible === 'Desactivated' ? <FaChevronDown size={20} color=\"black\" /> : <FaChevronUp size={20} color=\"black\" />}\r\n                            </div>\r\n                            <div className=\"Options\" id={optionVisible}>\r\n                                {dates.map((item) => {\r\n                                    return renderDates(item);\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"Selected\" id=\"Nothing\"> \r\n                            <label className=\"OptionValue\" id=\"Selected\">{optionValue}</label>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <Link className=\"EAEReturnButton\" to=\"/adm\">\r\n                    <BsArrowReturnLeft size={20} color=\"#E02041\" />\r\n                </Link>\r\n            </div>\r\n            {optionValue !== 'Aguardando...' ?\r\n            <div>\r\n                <div className=\"EAEDiv\">\r\n                    <h1>Entradas</h1>\r\n                    {entries ? <div className=\"EAEOfTheDay\">{\r\n                    //eslint-disable-next-line\r\n                    EAEVisualizable.map(item => {\r\n                        if(item.type === 'entries') {\r\n                            return renderEAEV(item);\r\n                        }\r\n                    })}</div> : <div className=\"NothingEAE\">Nenhuma entrada nesse dia</div>}\r\n                </div>        \r\n                <div className=\"EAEDiv\">\r\n                    <h1>Saidas</h1>\r\n                    {exits ? <div className=\"EAEOfTheDay\">{\r\n                    //eslint-disable-next-line\r\n                    EAEVisualizable.map(item => {\r\n                        if(item.type === 'exit') {\r\n                            return renderEAEV(item);\r\n                        }\r\n                    })}</div> : <div className=\"NothingEAE\">Nenhuma saída nesse dia</div>}\r\n                </div>\r\n            </div>\r\n            :\r\n            <div></div>\r\n            }\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa'\r\n\r\nimport './REAEStyles.css';\r\n\r\nimport api from '../../services/api';\r\nimport client from '../../services/socket';\r\n\r\nexport default function RegisterEAE() {\r\n    \r\n    const history = useHistory();\r\n\r\n    const [stock, setStock] = useState([{itemName: \"Carregando...\"}]);\r\n\r\n    const [inputAlter, setIA] = useState('');\r\n    const [inputQuant, setIQ] = useState('');\r\n\r\n    const [itemOptionValue, setItemOptionValue] = useState(\"Selecione o item\");\r\n    const [itemIDView, setItemIDView] = useState(\"Desactive\");\r\n\r\n    const [typeOptionValue, setTypeOptionValue] = useState(\"Selecione o tipo de registro\");\r\n    const [typeIDView, setTypeIDView] = useState(\"Desactive\")\r\n\r\n    const [atualization, setAtualization] = useState(0);\r\n\r\n    let auth = async () => {\r\n        const accountId = localStorage.getItem(\"accountId\");\r\n        try {\r\n            const response = await api.post('/enterProfileById', {\r\n                id: accountId,\r\n            });\r\n\r\n            if(response.data[0].type === \"adm\") {\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n\r\n            } else if(response.data[0].type === \"user\"){\r\n                localStorage.setItem(\"accountId\", response.data[0].id);\r\n                history.push('/user');\r\n\r\n            } else {\r\n                history.push('/');\r\n\r\n            }\r\n\r\n        } catch(err) {\r\n            history.push('/');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let socketClient = () => {\r\n        client.on('reload', () => {getStock()});\r\n\r\n    }\r\n\r\n    let getStock = async () => {\r\n        setItemOptionValue(\"Selecione o item\");\r\n        try {\r\n            const response = await api.get('stock');\r\n            setStock(response.data);\r\n            setAtualization(atualization+1);\r\n\r\n        } catch(err) {\r\n            console.log(err.response.data);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth();\r\n        socketClient();\r\n        getStock();\r\n\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    let renderStockOption = (item) => {\r\n        return (\r\n            <div className=\"ItemOption\" key={item.id} onClick={() => {setItemOptionValue(item.itemName)}}>\r\n                <label className=\"ItemOptionValue\">\r\n                    {item.itemName}\r\n                </label>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    let createREAE = () => {\r\n        if(itemOptionValue === \"Selecione o item\") {\r\n            alert('Você tem que selecionar um item para registrar uma alteração');\r\n\r\n        } else if(typeOptionValue === \"Selecione o tipo de registro\") {\r\n            alert('Você tem que selecionar um tipo de alteração para registrar uma alteração');\r\n\r\n        } else if(inputQuant === '' || inputQuant === 0) {\r\n            alert('Você precisa adicionar o valor da alteração para registrar uma alteração')\r\n\r\n        } else if(inputAlter === '') {\r\n            alert('Você precisa adicionar o alterador para registrar um alteração');\r\n\r\n        } else {\r\n            let type;\r\n            let changes = inputQuant;\r\n            let itemThatChange = itemOptionValue;\r\n            let alterator = inputAlter;\r\n            let state;\r\n            typeOptionValue === 'Entrada' ? type = 'entries' : type = 'exit';\r\n            stock.forEach(item => {\r\n                if(item.itemName === itemOptionValue) {\r\n                    if(type === 'entries'){\r\n                        state = parseInt(item.itemQuant) + parseInt(changes);\r\n                    } else {\r\n                        state = parseInt(item.itemQuant) - parseInt(changes);\r\n                    }     \r\n                }\r\n            });\r\n\r\n            try {\r\n                api.post('/EntriesExits', {\r\n                    type,\r\n                    changes,\r\n                    itemThatChange,\r\n                    alterator,\r\n                    state\r\n                });\r\n\r\n                client.emit('reloadEmit');\r\n\r\n                setItemOptionValue('Selecione o item');\r\n                setTypeOptionValue('Selecione o tipo de registro');\r\n                setItemIDView('Desactive');\r\n                setTypeIDView('Desactive');\r\n                setIA('');\r\n                setIQ('');\r\n\r\n            } catch(err) {\r\n                alert('Erro ao fazer registro')\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n        <div className=\"REAEPage\">\r\n            <div className=\"REAEHeader\">\r\n                <h1 className=\"REAEh1\">Registrar entradas e saídas</h1>\r\n                <Link to=\"/adm\">\r\n                    <BsArrowReturnLeft size={20} color=\"#E02041\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"REAEForm\">\r\n        \t    <div className=\"REAEFormInputs\">\r\n                    <div className=\"ItemSelectBox\" onClick={() => {itemIDView === \"Desactive\" ? setItemIDView(\"Active\") : setItemIDView(\"Desactive\")}}>\r\n                        <div className=\"ItemSelected\" id={itemIDView}>\r\n                            <label className=\"ItemSelectedValue\">{itemOptionValue}</label>\r\n                            {itemIDView === \"Desactive\" ?\r\n                                <FaChevronDown size={20} color=\"black\" />\r\n                            :\r\n                                <FaChevronUp size={20} color=\"black\" />\r\n                            }\r\n                        </div>\r\n                        <div className=\"ItemOptions\" id={itemIDView}>\r\n                            {stock.map(item => {return renderStockOption(item)})}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"TypeSelectBox\" onClick={() => {typeIDView === \"Desactive\" ? setTypeIDView(\"Active\") : setTypeIDView(\"Desactive\")}}>\r\n                        <div className=\"TypeSelected\" id={typeIDView}>\r\n                            <label className=\"TypeSelectedValue\">{typeOptionValue}</label>\r\n                            {typeIDView === \"Desactive\" ?\r\n                                <FaChevronDown size={20} color=\"black\" />\r\n                            :\r\n                                <FaChevronUp size={20} color=\"black\" />\r\n                            }\r\n                        </div>\r\n                        <div className=\"TypeOptions\" id={typeIDView}>\r\n                            <div className=\"TypeOption\" key=\"entradas\" onClick={() => {setTypeOptionValue(\"Entrada\")}}>Entrada</div>\r\n                            <div className=\"TypeOption\" key=\"saidas\" onClick={() => {setTypeOptionValue(\"Saída\")}}>Saída</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"REAEInputs\">\r\n                        <input className=\"InputREAEQuant\" value={inputQuant} placeholder=\"Quantidade do registro\" onChange={e => {\r\n                            if(!(String(e.target.value.length) >= 5)) {\r\n                                setIQ(e.target.value);\r\n                            }\r\n                        }} type=\"number\"  />\r\n                        <input className=\"InputREAEAlter\" value={inputAlter} placeholder=\"Auterador\" onChange={e => {\r\n                            setIA(e.target.value);\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n                <button className=\"REAESubmit\" type=\"submit\" onClick={() => {createREAE()}}>Registrar</button>\r\n            </div>\r\n            <div className=\"Attempt\">*sempre altere o item alterado quando terminar a alteração para melhor controle das entradas e saídas</div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Login from './pages/Login';\r\nimport AdmInterface from './pages/AdmInterface';\r\nimport UserInterface from './pages/UserInterface';\r\nimport AddItens from './pages/AddItens';\r\nimport Requests from './pages/Requests';\r\nimport EntriesAndExits from './pages/EntriesAndExits';\r\nimport RegisterEAE from './pages/RegisterEAE';\r\n\r\nexport default function Routes() {\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Login} />\r\n                <Route path=\"/adm\" exact component={AdmInterface} />\r\n                <Route path=\"/user\" component={UserInterface} />\r\n                <Route path=\"/adm/addItens\" component={AddItens} />\r\n                <Route path=\"/adm/requests\" component={Requests} />\r\n                <Route path=\"/adm/entriesAndExits\" component={EntriesAndExits} />\r\n                <Route path=\"/adm/REAE\" component={RegisterEAE} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n\r\n}","import React from 'react';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);;\n"],"sourceRoot":""}